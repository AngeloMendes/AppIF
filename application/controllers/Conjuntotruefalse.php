<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Conjuntotruefalse extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Conjuntotruefalse_model');
        $this->load->model('Truefalse_model');
        $this->load->model('Truefalsefrase_model');
        $this->load->model('Licao_model');

    } 

    /*
     * Listing of conjuntotruefalse
     */
    function index()
    {
        $data['conjuntotruefalse'] = $this->Conjuntotruefalse_model->get_all_conjuntotruefalse();
        
        $data['_view'] = 'conjuntotruefalse/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new conjuntotruefalse
     */
    function add($idLicao)
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            //adicionar true ou false

            $titulo = $this->input->post('titulo');
            if (!empty($_FILES['imagem']['name'])) {
                $imagem = $_FILES['imagem'];

                $extensaoImagem = explode('.', $imagem['name']);
                $extensaoImagem = end($extensaoImagem);

                $caminhoImagem = base_url('application/midias/imagens/licoes/') . str_replace(" ", "", $titulo) . '.' . $extensaoImagem;
                /*$configuracaoImagem = array(
                    'upload_path' => './application/midias/imagens/licoes/',
                    'allowed_types' => 'jpg|png|jpeg|gif',
                    'file_name' => str_replace(" ", "", $titulo) . '.' . $extensaoImagem,
                    'max_size' => '500000',
                    'max_width' => '4096',
                    'max_height' => '4096'
                );*/
                $configuracaoImagem = array(
                    'upload_path' => './application/midias/imagens/perguntas/',
                    'allowed_types' => 'jpg|png|jpeg|gif',
                    'file_name' => str_replace(array(' ', '?', '!', '.', ':'),
                            array('', '', '', '', ''), $titulo) . '.' . $extensaoImagem,
                    'max_size' => '50000'
                );

                $this->upload->initialize($configuracaoImagem);
                if (!$this->upload->do_upload('imagem')) {
                    ///$caminhoImagem=$this->upload->display_errors();
                    $caminhoImagem = 'error';
                }
            } else {
                $caminhoImagem = "";
            }


            if (!empty($_FILES['video']['name'])) {
                $video = $_FILES['video'];
                $extensaoVideo = explode('.', $video['name']);
                $extensaoVideo = end($extensaoVideo);
                $caminhoVideo = base_url('application/midias/videos/licoes/') . str_replace(" ", "", $titulo) . '.' . $extensaoVideo;
                /*$configuracaoVideo = array(
                    'upload_path' => './application/midias/videos/licoes/',
                    'allowed_types' => 'FLV|AVI|WMV|MOV|RMVB|MPEG|MKV|mp4|3gp|MPEG',
                    'file_name' => str_replace(" ", "", $titulo) . '.' . $extensaoVideo,
                    'max_size' => '500000000'
                );*/
                $configuracaoVideo = array(
                    'upload_path' => './application/midias/videos/perguntas/',
                    'allowed_types' => 'FLV|AVI|WMV|MOV|RMVB|MPEG|MKV|mp4|MP4',
                    'file_name' => str_replace(array(' ', '?', '!', '.', ':'),
                            array('', '', '', '', ''), $titulo) . '.' . $extensaoVideo,
                    'max_size' => '50000000'
                );
                $this->upload->initialize($configuracaoVideo);
                if (!$this->upload->do_upload('video')) {
                    //$caminhoVideo=$this->upload->display_errors();
                    $caminhoVideo = 'error';
                }
            } else {
                $caminhoVideo = "";
            }

            $params = array(
                'titulo' => $titulo,
                'imagem' => $caminhoImagem,
                'video' => $caminhoVideo,
                'ordem' => $this->Licao_model->setOrdem($idLicao),
                'idLicao' => $idLicao,
                'descricao' => $this->input->post('descricao'),
                'tipo'=>'truefalse',
            );

            $idTruefalse = $this->Truefalse_model->add_truefalse($params);

            //adicionar as frases do true ou false
            $i=1;
            while (!empty($_POST['Frase'.$i]['frase'])){
                $fraseAtual = 'Frase'.$i;
                $params = array(
                    'frase' => $this->input->post($fraseAtual.'[frase]'),
                    'opcaoTrue' => $this->input->post($fraseAtual.'[opcaoTrue]'),
                    'opcaoFalse' => $this->input->post($fraseAtual.'[opcaoFalse]'),
                    'opcaoCorreta' => $this->input->post($fraseAtual.'[opcaoCorreta]'),
                );

                $idTruefalsefrase = $this->Truefalsefrase_model->add_truefalsefrase($params);
                $params = array(
                    'idTrueFalseFrases' => $idTruefalsefrase,
                    'idTrueFalse' => $idTruefalse,
                );

                $conjuntotruefalse_id = $this->Conjuntotruefalse_model->add_conjuntotruefalse($params);

                $i++;
            }

            redirect('licao/index');
        }
        else
        {            
            $data['_view'] = 'conjuntotruefalse/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a conjuntotruefalse
     */
    function edit($idConjuntoTrueFalse)
    {   
        // check if the conjuntotruefalse exists before trying to edit it
        $data['conjuntotruefalse'] = $this->Conjuntotruefalse_model->get_conjuntotruefalse($idConjuntoTrueFalse);
        
        if(isset($data['conjuntotruefalse']['idConjuntoTrueFalse']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'idTrueFalseFrases' => $this->input->post('idTrueFalseFrases'),
					'idTrueFalse' => $this->input->post('idTrueFalse'),
                );

                $this->Conjuntotruefalse_model->update_conjuntotruefalse($idConjuntoTrueFalse,$params);            
                redirect('conjuntotruefalse/index');
            }
            else
            {
                $data['_view'] = 'conjuntotruefalse/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The conjuntotruefalse you are trying to edit does not exist.');
    } 

    /*
     * Deleting conjuntotruefalse
     */
    function remove($idConjuntoTrueFalse)
    {
        $conjuntotruefalse = $this->Conjuntotruefalse_model->get_conjuntotruefalse($idConjuntoTrueFalse);

        // check if the conjuntotruefalse exists before trying to delete it
        if(isset($conjuntotruefalse['idConjuntoTrueFalse']))
        {
            $this->Conjuntotruefalse_model->delete_conjuntotruefalse($idConjuntoTrueFalse);
            redirect('conjuntotruefalse/index');
        }
        else
            show_error('The conjuntotruefalse you are trying to delete does not exist.');
    }
    
}
